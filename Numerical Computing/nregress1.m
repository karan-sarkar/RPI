function fig8_12global xd yd% data for traffic speed% density (veh/km), speed (km/hr)xd=[1, 0, -1, 0, 1];yd=[1/0.62, 1/1.23, 1/16.15, 1/1.35, 1/0.62];clf% get(gcf)set(gcf,'Position', [25 1115 658 230])co = [0 0 1;      0 0.5 0;      1 0 0;      0 0.75 0.75;      0.75 0 0.75;      0.75 0.75 0;      0.25 0.25 0.25];set(groot,'defaultAxesColorOrder',co)% find v1 and v2, and then determine resulting curvev2=max(yd); v1=-5;sol = fminsearch(@E, [v1 v2],optimset('MaxFunEvals',1000000,'MaxIter',1000000,'TolX',1e-6));v1=sol(1)v2=sol(2)x=linspace(min(xd),max(xd),100);for i=1:100    y(i)=f(x(i),v1,v2);endhold onplot(xd,yd,'o','LineWidth',1.5,'MarkerSize',6,'MarkerEdgeColor','g')%plot(xd,yd,'o','LineWidth',0.5,'MarkerSize',6,'MarkerEdgeColor','k','MarkerFaceColor','g')plot(x,y,'r','LineWidth',2)box ongrid onxlabel('Density')ylabel('Speed')set(gca,'FontSize',16,'FontWeight','bold') legend({' Data',' Nonlinear Fit (1)'},'Location','NorthEast','FontSize',16,'FontWeight','bold')pause% find V1 and V2nd=length(xd);for i=1:nd    XD(i)=xd(i)^4;    YD(i)=1/yd(i);endSX=sum(XD); SX2=dot(XD,XD);SY=sum(YD); SXY=dot(XD,YD);D=nd*SX2-SX^2;V1=(SX2*SY-SX*SXY)/D;V2=(-SX*SY+nd*SXY)/D;% determine resulting curve and plot itvv1=1/V1vv2=V2/V1for i=1:100    yy(i)=f(x(i),vv1,vv2);endplot(x,yy,'b','LineWidth',1.5)legend({' Data',' Nonlinear Fit (1)',' Linear Fit (2a)'},'Location','NorthEast','FontSize',16,'FontWeight','bold')pause%%%%%%  find V1 and V2 using relative errorA=0;  B=0;  D=0; B1=0;  B2=0;for i=1:nd    A=A+1/YD(i)^2;    B=B+XD(i)/YD(i)^2;    D=D+XD(i)^2/YD(i)^2;    B1=B1+1/YD(i);    B2=B2+XD(i)/YD(i);endVV=[[A B];[B D]]\[B1; B2];vvv1=1/VV(1)vvv2=vvv1*VV(2)for i=1:100    yyy(i)=f(x(i),vvv1,vvv2);endplot(x,yyy,'--b','LineWidth',1.5)legend({' Data',' Nonlinear Fit (1)',' Linear Fit (2a)',' Scaled Linear Fit (2b)'},'Location','NorthEast','FontSize',16,'FontWeight','bold')pause% find v1 and v2 using relative errorv2=max(yd); v1=-5;solr = fminsearch(@Er, [v1 v2],optimset('MaxFunEvals',1000000,'MaxIter',1000000,'TolX',1e-6));v1r=solr(1)v2r=solr(2)xr=linspace(min(xd),max(xd),100);for i=1:100    yr(i)=f(x(i),v1r,v2r);endplot(xr,yr,'--r','LineWidth',1.6)legend({' Data',' Nonlinear Fit (1)',' Linear Fit (2a)',' Scaled Linear Fit (2b)',' Scaled Nonlinear Fit (3)'},'Location','NorthEast','FontSize',16,'FontWeight','bold')% error functionfunction s=E(v)global xd ydv1=v(1); v2=v(2);s=0;for i=1:length(xd)	s = s + (f(xd(i),v1,v2) - yd(i))^2;end% relative error functionfunction s=Er(v)global xd ydv1=v(1); v2=v(2);s=0;for i=1:length(xd)	s = s + (f(xd(i),v1,v2)/yd(i) - 1)^2;end% model functionfunction g=f(x,v1,v2)g=v1 + v2*x;